import datetimeimport jsonfrom src.tools.connection_creator import ConnectionCreatorfrom src.model.queries_storage import QueriesStoragefrom src.model.stock_levels_messages import StockLevelsMessagesfrom src.tools.stock_levels_logging import stock_levels_loggingdef save_outgoing_response(output_data):    try:        message_type = 'outgoing_response'        message_status = 'valid'        message_datetime = datetime.datetime.now()        message_data = json.loads(output_data)        message_data = json.dumps(message_data, ensure_ascii=False)        data = {            "message_type": message_type,            "message_status": message_status,            "message_datetime": message_datetime,            "message_data": message_data        }        conn = ConnectionCreator.create_connection()        with conn:            cur = conn.cursor()            cur.execute(QueriesStorage.insert_into_log_table, data)            conn.commit()        stock_levels_logging.info(StockLevelsMessages.data_added_to_table)    except Exception as e:        stock_levels_logging.error(f"Exception in save_outgoing_response: {str(e)}")        return f"save_outgoing_response_exception: {str(e)}"